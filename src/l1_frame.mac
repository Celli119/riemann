load(hj_fortran2)$

optimprefix: tt$

abs_approx(x, eps) := sqrt(x^2+eps)$

l1_approx(x, eps) := abs_approx(x[1,1], eps)+abs_approx(x[2,1], eps)+abs_approx(x[3,1], eps)$

f: openw()$

block(
  [Rab, stiff],
  Rab:     genmatrix(Rab, 3, 6),
  epsilon: genmatrix(epsilon, 1, 1),
  stiff:   genmatrix(stiff, 1, 1),
  l1_smooth_term(Rab, epsilon, stiff) := block(
    [Ra, Rb, rtn],
    Ra: addcol(col(Rab, 1), col(Rab, 2), col(Rab, 3)),
    Rb: addcol(col(Rab, 4), col(Rab, 5), col(Rab, 6)),
    P: transpose(Rb).Ra,
    rtn: l1_approx(col(P, 1), eps[1,1])
        +l1_approx(col(P, 2), eps[1,1])
        +l1_approx(col(P, 3), eps[1,1]),
    stiff*rtn
  ),
  return()
)$

block(
  [R, stiff],
  R:     genmatrix(R, 3, 3),
  stiff: genmatrix(stiff, 1, 1),
  l1_orth_term(R, stiff) := block(
    stiff*mat_norm(transpose(R).R-ident(3), frobenius)^2
  ),
  with_stdout(f, val_jac_hes_to_f90(l1_orth_term, [R, stiff])),
  return()
)$

/* block( */
/*   [R, n, epsilon, stiff], */
/*   R:       genmatrix(R, 3, 3), */
/*   n:       genmatrix(n, 3, 1), */
/*   epsilon: genmatrix(epsilon, 1, 1), */
/*   stiff:   genmatrix(stiff, 1, 1), */
/*   l1_align_term(R, n, epsilon, stiff) := block( */
/*   ), */
/*   return() */
/* )$ */

close(f)$