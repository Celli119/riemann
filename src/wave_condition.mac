load(hj_fortran2)$
load(cj_function)$

optimprefix : tt$

f: openw("wave_condition.f90")$

block(
  [F, C],
  F: genmatrix(F, 4, 2),
  C: genmatrix(C, 4, 1),
  wave_value_condition(F, C) := block(
    [cij, cji, Fi, Fj, rtn],
    Fi: col(F, 1), 
    Fj: col(F, 2),
    cij: matrix([C[1,1]], [C[2, 1]], [C[3, 1]], [C[4, 1]]),
    cji: matrix([C[1,1]], [-C[2, 1]], [-C[3, 1]], [C[4,1]]),
    rtn: (Fj[1, 1]-DOT(cij, Fi))^2+(Fi[1, 1]-DOT(cji, Fj))^2,
    matrix([rtn])
  ),
  with_stdout(f, val_jac_hes_to_f90(wave_value_condition, [F, C])),
  return()
)$

block(
  [F],
  F: genmatrix(F, 4, 1),
  
  modulus_condition(F) := matrix([ (DOT(F, F)-1)^2 ]),
  with_stdout(f, val_jac_hes_to_f90(modulus_condition, [F])),
  
  phase_condition(F) := matrix([ (F[1,1]*F[4,1]-F[2,1]*F[3,1])^2 ]),
  with_stdout(f, val_jac_hes_to_f90(phase_condition, [F])),
  
  return()
)$

close(f)$