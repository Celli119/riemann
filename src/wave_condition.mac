load(hj_fortran2)$
load(cj_function)$

optimprefix : tt$

f: openw("wave_condition.f90")$

block(
  [F, Cij, Cji],
  F: genmatrix(F, 4, 2),
  Cij: genmatrix(Cij, 4, 1),
  Cji: genmatrix(Cji, 4, 1),
  trans_condition(F, Cij, Cji) := block(
    [Fi, Fj, rtn],
    Fi: col(F, 1), 
    Fj: col(F, 2),
    rtn: (Fj[1, 1]-DOT(Cij, Fi))^2+(Fi[1, 1]-DOT(Cji, Fj))^2,
    matrix([rtn])
  ),
  with_stdout(f, val_jac_hes_to_f90(trans_condition, [F, Cij, Cji])),
  return()
)$

block(
  [F],
  F: genmatrix(F, 4, 1),
  
  modulus_condition(F) := matrix([ (DOT(F, F)-1)^2 ]),
  with_stdout(f, val_jac_hes_to_f90(modulus_condition, [F])),
  
  phase_condition(F) := matrix([ (F[1,1]*F[4,1]-F[2,1]*F[3,1])^2 ]),
  with_stdout(f, val_jac_hes_to_f90(phase_condition, [F])),
  
  return()
)$

close(f)$